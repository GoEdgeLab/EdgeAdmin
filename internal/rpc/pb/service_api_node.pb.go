// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: service_api_node.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 创建API节点
type CreateAPINodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Host        string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *CreateAPINodeRequest) Reset() {
	*x = CreateAPINodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPINodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPINodeRequest) ProtoMessage() {}

func (x *CreateAPINodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPINodeRequest.ProtoReflect.Descriptor instead.
func (*CreateAPINodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{0}
}

func (x *CreateAPINodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAPINodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateAPINodeRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *CreateAPINodeRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type CreateAPINodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *CreateAPINodeResponse) Reset() {
	*x = CreateAPINodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateAPINodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAPINodeResponse) ProtoMessage() {}

func (x *CreateAPINodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAPINodeResponse.ProtoReflect.Descriptor instead.
func (*CreateAPINodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{1}
}

func (x *CreateAPINodeResponse) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

// 修改API节点
type UpdateAPINodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      int64  `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Host        string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port        int32  `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *UpdateAPINodeRequest) Reset() {
	*x = UpdateAPINodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPINodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPINodeRequest) ProtoMessage() {}

func (x *UpdateAPINodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPINodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateAPINodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateAPINodeRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *UpdateAPINodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAPINodeRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateAPINodeRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *UpdateAPINodeRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type UpdateAPINodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAPINodeResponse) Reset() {
	*x = UpdateAPINodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAPINodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAPINodeResponse) ProtoMessage() {}

func (x *UpdateAPINodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAPINodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateAPINodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{3}
}

// 删除API节点
type DeleteAPINodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *DeleteAPINodeRequest) Reset() {
	*x = DeleteAPINodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAPINodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPINodeRequest) ProtoMessage() {}

func (x *DeleteAPINodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPINodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteAPINodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteAPINodeRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type DeleteAPINodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAPINodeResponse) Reset() {
	*x = DeleteAPINodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAPINodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAPINodeResponse) ProtoMessage() {}

func (x *DeleteAPINodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAPINodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteAPINodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{5}
}

// 列出所有可用API节点
type FindAllEnabledAPINodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FindAllEnabledAPINodesRequest) Reset() {
	*x = FindAllEnabledAPINodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledAPINodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledAPINodesRequest) ProtoMessage() {}

func (x *FindAllEnabledAPINodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledAPINodesRequest.ProtoReflect.Descriptor instead.
func (*FindAllEnabledAPINodesRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{6}
}

type FindAllEnabledAPINodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*APINode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *FindAllEnabledAPINodesResponse) Reset() {
	*x = FindAllEnabledAPINodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindAllEnabledAPINodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindAllEnabledAPINodesResponse) ProtoMessage() {}

func (x *FindAllEnabledAPINodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindAllEnabledAPINodesResponse.ProtoReflect.Descriptor instead.
func (*FindAllEnabledAPINodesResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{7}
}

func (x *FindAllEnabledAPINodesResponse) GetNodes() []*APINode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 计算API节点数量
type CountAllEnabledAPINodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CountAllEnabledAPINodesRequest) Reset() {
	*x = CountAllEnabledAPINodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAllEnabledAPINodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAllEnabledAPINodesRequest) ProtoMessage() {}

func (x *CountAllEnabledAPINodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAllEnabledAPINodesRequest.ProtoReflect.Descriptor instead.
func (*CountAllEnabledAPINodesRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{8}
}

type CountAllEnabledAPINodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *CountAllEnabledAPINodesResponse) Reset() {
	*x = CountAllEnabledAPINodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountAllEnabledAPINodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountAllEnabledAPINodesResponse) ProtoMessage() {}

func (x *CountAllEnabledAPINodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountAllEnabledAPINodesResponse.ProtoReflect.Descriptor instead.
func (*CountAllEnabledAPINodesResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{9}
}

func (x *CountAllEnabledAPINodesResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

// 列出单页的API节点
type ListEnabledAPINodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64 `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Size   int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *ListEnabledAPINodesRequest) Reset() {
	*x = ListEnabledAPINodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledAPINodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledAPINodesRequest) ProtoMessage() {}

func (x *ListEnabledAPINodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledAPINodesRequest.ProtoReflect.Descriptor instead.
func (*ListEnabledAPINodesRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{10}
}

func (x *ListEnabledAPINodesRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListEnabledAPINodesRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ListEnabledAPINodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*APINode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *ListEnabledAPINodesResponse) Reset() {
	*x = ListEnabledAPINodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListEnabledAPINodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListEnabledAPINodesResponse) ProtoMessage() {}

func (x *ListEnabledAPINodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListEnabledAPINodesResponse.ProtoReflect.Descriptor instead.
func (*ListEnabledAPINodesResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{11}
}

func (x *ListEnabledAPINodesResponse) GetNodes() []*APINode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// 根据ID查找节点
type FindEnabledAPINodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int64 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *FindEnabledAPINodeRequest) Reset() {
	*x = FindEnabledAPINodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledAPINodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledAPINodeRequest) ProtoMessage() {}

func (x *FindEnabledAPINodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledAPINodeRequest.ProtoReflect.Descriptor instead.
func (*FindEnabledAPINodeRequest) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{12}
}

func (x *FindEnabledAPINodeRequest) GetNodeId() int64 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type FindEnabledAPINodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *APINode `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *FindEnabledAPINodeResponse) Reset() {
	*x = FindEnabledAPINodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_api_node_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindEnabledAPINodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindEnabledAPINodeResponse) ProtoMessage() {}

func (x *FindEnabledAPINodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_service_api_node_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindEnabledAPINodeResponse.ProtoReflect.Descriptor instead.
func (*FindEnabledAPINodeResponse) Descriptor() ([]byte, []int) {
	return file_service_api_node_proto_rawDescGZIP(), []int{13}
}

func (x *FindEnabledAPINodeResponse) GetNode() *APINode {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_service_api_node_proto protoreflect.FileDescriptor

var file_service_api_node_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x14, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x74, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x14, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x2e, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x1d, 0x46, 0x69,
	0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e,
	0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a, 0x1e, 0x46,
	0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73,
	0x22, 0x20, 0x0a, 0x1e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x37, 0x0a, 0x1f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x48, 0x0a, 0x1a, 0x4c,
	0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x40, 0x0a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x46, 0x69, 0x6e, 0x64, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x1a,
	0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x50,
	0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x32, 0xd4, 0x04, 0x0a, 0x0e,
	0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50,
	0x49, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x16, 0x66, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x21, 0x2e, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50,
	0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x62, 0x0a, 0x17, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x22, 0x2e, 0x70,
	0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x45, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a,
	0x12, 0x66, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x41, 0x50, 0x49, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_service_api_node_proto_rawDescOnce sync.Once
	file_service_api_node_proto_rawDescData = file_service_api_node_proto_rawDesc
)

func file_service_api_node_proto_rawDescGZIP() []byte {
	file_service_api_node_proto_rawDescOnce.Do(func() {
		file_service_api_node_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_api_node_proto_rawDescData)
	})
	return file_service_api_node_proto_rawDescData
}

var file_service_api_node_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_service_api_node_proto_goTypes = []interface{}{
	(*CreateAPINodeRequest)(nil),            // 0: pb.CreateAPINodeRequest
	(*CreateAPINodeResponse)(nil),           // 1: pb.CreateAPINodeResponse
	(*UpdateAPINodeRequest)(nil),            // 2: pb.UpdateAPINodeRequest
	(*UpdateAPINodeResponse)(nil),           // 3: pb.UpdateAPINodeResponse
	(*DeleteAPINodeRequest)(nil),            // 4: pb.DeleteAPINodeRequest
	(*DeleteAPINodeResponse)(nil),           // 5: pb.DeleteAPINodeResponse
	(*FindAllEnabledAPINodesRequest)(nil),   // 6: pb.FindAllEnabledAPINodesRequest
	(*FindAllEnabledAPINodesResponse)(nil),  // 7: pb.FindAllEnabledAPINodesResponse
	(*CountAllEnabledAPINodesRequest)(nil),  // 8: pb.CountAllEnabledAPINodesRequest
	(*CountAllEnabledAPINodesResponse)(nil), // 9: pb.CountAllEnabledAPINodesResponse
	(*ListEnabledAPINodesRequest)(nil),      // 10: pb.ListEnabledAPINodesRequest
	(*ListEnabledAPINodesResponse)(nil),     // 11: pb.ListEnabledAPINodesResponse
	(*FindEnabledAPINodeRequest)(nil),       // 12: pb.FindEnabledAPINodeRequest
	(*FindEnabledAPINodeResponse)(nil),      // 13: pb.FindEnabledAPINodeResponse
	(*APINode)(nil),                         // 14: pb.APINode
}
var file_service_api_node_proto_depIdxs = []int32{
	14, // 0: pb.FindAllEnabledAPINodesResponse.nodes:type_name -> pb.APINode
	14, // 1: pb.ListEnabledAPINodesResponse.nodes:type_name -> pb.APINode
	14, // 2: pb.FindEnabledAPINodeResponse.node:type_name -> pb.APINode
	0,  // 3: pb.APINodeService.createAPINode:input_type -> pb.CreateAPINodeRequest
	2,  // 4: pb.APINodeService.updateAPINode:input_type -> pb.UpdateAPINodeRequest
	4,  // 5: pb.APINodeService.deleteAPINode:input_type -> pb.DeleteAPINodeRequest
	6,  // 6: pb.APINodeService.findAllEnabledAPINodes:input_type -> pb.FindAllEnabledAPINodesRequest
	8,  // 7: pb.APINodeService.countAllEnabledAPINodes:input_type -> pb.CountAllEnabledAPINodesRequest
	10, // 8: pb.APINodeService.listEnabledAPINodes:input_type -> pb.ListEnabledAPINodesRequest
	12, // 9: pb.APINodeService.findEnabledAPINode:input_type -> pb.FindEnabledAPINodeRequest
	1,  // 10: pb.APINodeService.createAPINode:output_type -> pb.CreateAPINodeResponse
	3,  // 11: pb.APINodeService.updateAPINode:output_type -> pb.UpdateAPINodeResponse
	5,  // 12: pb.APINodeService.deleteAPINode:output_type -> pb.DeleteAPINodeResponse
	7,  // 13: pb.APINodeService.findAllEnabledAPINodes:output_type -> pb.FindAllEnabledAPINodesResponse
	9,  // 14: pb.APINodeService.countAllEnabledAPINodes:output_type -> pb.CountAllEnabledAPINodesResponse
	11, // 15: pb.APINodeService.listEnabledAPINodes:output_type -> pb.ListEnabledAPINodesResponse
	13, // 16: pb.APINodeService.findEnabledAPINode:output_type -> pb.FindEnabledAPINodeResponse
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_service_api_node_proto_init() }
func file_service_api_node_proto_init() {
	if File_service_api_node_proto != nil {
		return
	}
	file_model_api_node_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_service_api_node_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPINodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateAPINodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPINodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAPINodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAPINodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAPINodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledAPINodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindAllEnabledAPINodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAllEnabledAPINodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountAllEnabledAPINodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledAPINodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListEnabledAPINodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledAPINodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_service_api_node_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindEnabledAPINodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_api_node_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_service_api_node_proto_goTypes,
		DependencyIndexes: file_service_api_node_proto_depIdxs,
		MessageInfos:      file_service_api_node_proto_msgTypes,
	}.Build()
	File_service_api_node_proto = out.File
	file_service_api_node_proto_rawDesc = nil
	file_service_api_node_proto_goTypes = nil
	file_service_api_node_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APINodeServiceClient is the client API for APINodeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APINodeServiceClient interface {
	// 创建API节点
	CreateAPINode(ctx context.Context, in *CreateAPINodeRequest, opts ...grpc.CallOption) (*CreateAPINodeResponse, error)
	// 修改API节点
	UpdateAPINode(ctx context.Context, in *UpdateAPINodeRequest, opts ...grpc.CallOption) (*UpdateAPINodeResponse, error)
	// 删除API节点
	DeleteAPINode(ctx context.Context, in *DeleteAPINodeRequest, opts ...grpc.CallOption) (*DeleteAPINodeResponse, error)
	// 列出所有可用API节点
	FindAllEnabledAPINodes(ctx context.Context, in *FindAllEnabledAPINodesRequest, opts ...grpc.CallOption) (*FindAllEnabledAPINodesResponse, error)
	// 计算API节点数量
	CountAllEnabledAPINodes(ctx context.Context, in *CountAllEnabledAPINodesRequest, opts ...grpc.CallOption) (*CountAllEnabledAPINodesResponse, error)
	// 列出单页的API节点
	ListEnabledAPINodes(ctx context.Context, in *ListEnabledAPINodesRequest, opts ...grpc.CallOption) (*ListEnabledAPINodesResponse, error)
	// 根据ID查找节点
	FindEnabledAPINode(ctx context.Context, in *FindEnabledAPINodeRequest, opts ...grpc.CallOption) (*FindEnabledAPINodeResponse, error)
}

type aPINodeServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPINodeServiceClient(cc grpc.ClientConnInterface) APINodeServiceClient {
	return &aPINodeServiceClient{cc}
}

func (c *aPINodeServiceClient) CreateAPINode(ctx context.Context, in *CreateAPINodeRequest, opts ...grpc.CallOption) (*CreateAPINodeResponse, error) {
	out := new(CreateAPINodeResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/createAPINode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) UpdateAPINode(ctx context.Context, in *UpdateAPINodeRequest, opts ...grpc.CallOption) (*UpdateAPINodeResponse, error) {
	out := new(UpdateAPINodeResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/updateAPINode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) DeleteAPINode(ctx context.Context, in *DeleteAPINodeRequest, opts ...grpc.CallOption) (*DeleteAPINodeResponse, error) {
	out := new(DeleteAPINodeResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/deleteAPINode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) FindAllEnabledAPINodes(ctx context.Context, in *FindAllEnabledAPINodesRequest, opts ...grpc.CallOption) (*FindAllEnabledAPINodesResponse, error) {
	out := new(FindAllEnabledAPINodesResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/findAllEnabledAPINodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) CountAllEnabledAPINodes(ctx context.Context, in *CountAllEnabledAPINodesRequest, opts ...grpc.CallOption) (*CountAllEnabledAPINodesResponse, error) {
	out := new(CountAllEnabledAPINodesResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/countAllEnabledAPINodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) ListEnabledAPINodes(ctx context.Context, in *ListEnabledAPINodesRequest, opts ...grpc.CallOption) (*ListEnabledAPINodesResponse, error) {
	out := new(ListEnabledAPINodesResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/listEnabledAPINodes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPINodeServiceClient) FindEnabledAPINode(ctx context.Context, in *FindEnabledAPINodeRequest, opts ...grpc.CallOption) (*FindEnabledAPINodeResponse, error) {
	out := new(FindEnabledAPINodeResponse)
	err := c.cc.Invoke(ctx, "/pb.APINodeService/findEnabledAPINode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APINodeServiceServer is the server API for APINodeService service.
type APINodeServiceServer interface {
	// 创建API节点
	CreateAPINode(context.Context, *CreateAPINodeRequest) (*CreateAPINodeResponse, error)
	// 修改API节点
	UpdateAPINode(context.Context, *UpdateAPINodeRequest) (*UpdateAPINodeResponse, error)
	// 删除API节点
	DeleteAPINode(context.Context, *DeleteAPINodeRequest) (*DeleteAPINodeResponse, error)
	// 列出所有可用API节点
	FindAllEnabledAPINodes(context.Context, *FindAllEnabledAPINodesRequest) (*FindAllEnabledAPINodesResponse, error)
	// 计算API节点数量
	CountAllEnabledAPINodes(context.Context, *CountAllEnabledAPINodesRequest) (*CountAllEnabledAPINodesResponse, error)
	// 列出单页的API节点
	ListEnabledAPINodes(context.Context, *ListEnabledAPINodesRequest) (*ListEnabledAPINodesResponse, error)
	// 根据ID查找节点
	FindEnabledAPINode(context.Context, *FindEnabledAPINodeRequest) (*FindEnabledAPINodeResponse, error)
}

// UnimplementedAPINodeServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPINodeServiceServer struct {
}

func (*UnimplementedAPINodeServiceServer) CreateAPINode(context.Context, *CreateAPINodeRequest) (*CreateAPINodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAPINode not implemented")
}
func (*UnimplementedAPINodeServiceServer) UpdateAPINode(context.Context, *UpdateAPINodeRequest) (*UpdateAPINodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateAPINode not implemented")
}
func (*UnimplementedAPINodeServiceServer) DeleteAPINode(context.Context, *DeleteAPINodeRequest) (*DeleteAPINodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAPINode not implemented")
}
func (*UnimplementedAPINodeServiceServer) FindAllEnabledAPINodes(context.Context, *FindAllEnabledAPINodesRequest) (*FindAllEnabledAPINodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindAllEnabledAPINodes not implemented")
}
func (*UnimplementedAPINodeServiceServer) CountAllEnabledAPINodes(context.Context, *CountAllEnabledAPINodesRequest) (*CountAllEnabledAPINodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CountAllEnabledAPINodes not implemented")
}
func (*UnimplementedAPINodeServiceServer) ListEnabledAPINodes(context.Context, *ListEnabledAPINodesRequest) (*ListEnabledAPINodesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListEnabledAPINodes not implemented")
}
func (*UnimplementedAPINodeServiceServer) FindEnabledAPINode(context.Context, *FindEnabledAPINodeRequest) (*FindEnabledAPINodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindEnabledAPINode not implemented")
}

func RegisterAPINodeServiceServer(s *grpc.Server, srv APINodeServiceServer) {
	s.RegisterService(&_APINodeService_serviceDesc, srv)
}

func _APINodeService_CreateAPINode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAPINodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).CreateAPINode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/CreateAPINode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).CreateAPINode(ctx, req.(*CreateAPINodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_UpdateAPINode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateAPINodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).UpdateAPINode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/UpdateAPINode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).UpdateAPINode(ctx, req.(*UpdateAPINodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_DeleteAPINode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAPINodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).DeleteAPINode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/DeleteAPINode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).DeleteAPINode(ctx, req.(*DeleteAPINodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_FindAllEnabledAPINodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindAllEnabledAPINodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).FindAllEnabledAPINodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/FindAllEnabledAPINodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).FindAllEnabledAPINodes(ctx, req.(*FindAllEnabledAPINodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_CountAllEnabledAPINodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CountAllEnabledAPINodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).CountAllEnabledAPINodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/CountAllEnabledAPINodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).CountAllEnabledAPINodes(ctx, req.(*CountAllEnabledAPINodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_ListEnabledAPINodes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEnabledAPINodesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).ListEnabledAPINodes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/ListEnabledAPINodes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).ListEnabledAPINodes(ctx, req.(*ListEnabledAPINodesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APINodeService_FindEnabledAPINode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindEnabledAPINodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APINodeServiceServer).FindEnabledAPINode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.APINodeService/FindEnabledAPINode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APINodeServiceServer).FindEnabledAPINode(ctx, req.(*FindEnabledAPINodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APINodeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.APINodeService",
	HandlerType: (*APINodeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createAPINode",
			Handler:    _APINodeService_CreateAPINode_Handler,
		},
		{
			MethodName: "updateAPINode",
			Handler:    _APINodeService_UpdateAPINode_Handler,
		},
		{
			MethodName: "deleteAPINode",
			Handler:    _APINodeService_DeleteAPINode_Handler,
		},
		{
			MethodName: "findAllEnabledAPINodes",
			Handler:    _APINodeService_FindAllEnabledAPINodes_Handler,
		},
		{
			MethodName: "countAllEnabledAPINodes",
			Handler:    _APINodeService_CountAllEnabledAPINodes_Handler,
		},
		{
			MethodName: "listEnabledAPINodes",
			Handler:    _APINodeService_ListEnabledAPINodes_Handler,
		},
		{
			MethodName: "findEnabledAPINode",
			Handler:    _APINodeService_FindEnabledAPINode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_api_node.proto",
}
